// Code generated by Kitex v0.4.4. DO NOT EDIT.

package reflectionservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	kitexreflectidl "github.com/jxskiss/kitex-reflect/kitex_gen/kitexreflectidl"
)

func serviceInfo() *kitex.ServiceInfo {
	return reflectionServiceServiceInfo
}

var reflectionServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "ReflectionService"
	handlerType := (*kitexreflectidl.ReflectionService)(nil)
	methods := map[string]kitex.MethodInfo{
		"ReflectService": kitex.NewMethodInfo(reflectServiceHandler, newReflectionServiceReflectServiceArgs, newReflectionServiceReflectServiceResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "kitexreflectidl",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func reflectServiceHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*kitexreflectidl.ReflectionServiceReflectServiceArgs)
	realResult := result.(*kitexreflectidl.ReflectionServiceReflectServiceResult)
	success, err := handler.(kitexreflectidl.ReflectionService).ReflectService(ctx, realArg.Request)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newReflectionServiceReflectServiceArgs() interface{} {
	return kitexreflectidl.NewReflectionServiceReflectServiceArgs()
}

func newReflectionServiceReflectServiceResult() interface{} {
	return kitexreflectidl.NewReflectionServiceReflectServiceResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) ReflectService(ctx context.Context, request *kitexreflectidl.ReflectServiceRequest) (r *kitexreflectidl.ReflectServiceResponse, err error) {
	var _args kitexreflectidl.ReflectionServiceReflectServiceArgs
	_args.Request = request
	var _result kitexreflectidl.ReflectionServiceReflectServiceResult
	if err = p.c.Call(ctx, "ReflectService", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
